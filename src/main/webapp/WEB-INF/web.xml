<?xml version="1.0" encoding="UTF-8"?> 
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
        xmlns="http://java.sun.com/xml/ns/javaee"   
        xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"   
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"   
        version="3.0">


  <display-name>Archetype Created Web Application</display-name>
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>
  		 classpath:applicationContext.xml,
  		 classpath:spring-mybatis.xml
  	</param-value>
  </context-param>
  <!-- Spring配置 -->
  <!-- ContextLoaderListener是Spring的监听器，它的作用就是启动Web容器时，自动装配ApplicationContext的配置信息。
  因为它实现了ServletContextListener这个接口，在web.xml配置这个监听器，启动容器时，就会默认执行它实现的方法。 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 解决跨域问题 -->
  <filter>
  	<filter-name>CorsFilter</filter-name>
  	<filter-class>com.demo.filter.CorsFilter</filter-class>
  </filter>
  <filter-mapping>
	   <filter-name>CorsFilter</filter-name>
	   <url-pattern>/*</url-pattern>
  </filter-mapping>
    <!-- Spring MVC配置 -->
	<!-- ====================================== -->
	<servlet>
	    <servlet-name>spring</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，如spring-servlet.xml-->
	    <init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>classpath:spring-mvc.xml</param-value>
	    </init-param>
	    <load-on-startup>1</load-on-startup>
	    <async-supported>true</async-supported>
	</servlet>
	
	<servlet-mapping>
	    <servlet-name>spring</servlet-name>
	    <url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<filter>
	    <filter-name>CharacterEncodingFilter</filter-name>
	    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	    <init-param>
	      <param-name>encoding</param-name>
	      <param-value>utf-8</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>CharacterEncodingFilter</filter-name>
	    <url-pattern>/</url-pattern>
	  </filter-mapping>
</web-app>
